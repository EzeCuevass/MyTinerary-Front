{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eze\\\\Desktop\\\\Bootcamp\\\\MyTinerary\\\\mytinerary\\\\frontend\\\\src\\\\components\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\nimport commentActions from \"../redux/actions/commentsActions\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { TextField } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport \"../styles/comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(_ref) {\n  _s();\n\n  let {\n    itinerary,\n    cityid\n  } = _ref;\n  // console.log(itinerary);\n  const [comments, setComments] = useState([]);\n  const [inputText, setInputText] = useState();\n  const [modify, setModify] = useState();\n  const [reload, setReload] = useState();\n  const dispatch = useDispatch(); // console.log(inputText);\n\n  const user = useSelector(store => store.userReducer.user); // let itineraryId = itinerary._id\n\n  async function toAdd(event) {\n    const commentData = {\n      itineraryId: itinerary._id,\n      comments: {\n        comment: inputText,\n        userid: user.id\n      }\n    };\n    await dispatch(commentActions.addComment(commentData));\n    setInputText(\"\");\n    setReload(!reload);\n  }\n\n  async function toModify(comments) {\n    const commentData = {\n      commentId: comments._id,\n      comment: modify\n    };\n    await dispatch(commentActions.modifyComment(commentData));\n    setReload(!reload);\n  }\n\n  async function toDelete(comments) {\n    await dispatch(commentActions.deleteComment(comments._id));\n    setReload(!reload);\n  }\n\n  useEffect(() => {\n    dispatch(itinerariesActions.findTinFromCity(cityid));\n  }, [reload]);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: [user == null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Go to sign in for comment about the itineraries!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), itinerary.comments.length > 0 ? user == null ? itinerary.comments.map(comments => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(comments.date).toUTCString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this)]\n      }, comments._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this)) : itinerary.comments.map(comments => user.id == comments.iduser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(comments.date).toUTCString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"2\",\n          onChange: event => setModify(event.target.value),\n          defaultValue: comments.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n          id: comments._id,\n          onClick: () => toModify(comments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          id: comments._id,\n          onClick: () => toDelete(comments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this)]\n      }, comments._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(comments.date).toUTCString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this)]\n      }, comments._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"there are no commentaries, be the first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-comment\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Comment\",\n        variant: \"standard\",\n        onChange: event => setInputText(event.target.value),\n        value: inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n        onClick: toAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"m+GqqYzOTWbpGwsGJBVZmAiiHHI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","itinerariesActions","commentActions","AddIcon","TextField","EditIcon","DeleteIcon","Comments","itinerary","cityid","comments","setComments","inputText","setInputText","modify","setModify","reload","setReload","dispatch","user","store","userReducer","toAdd","event","commentData","itineraryId","_id","comment","userid","id","addComment","toModify","commentId","modifyComment","toDelete","deleteComment","findTinFromCity","console","log","length","map","Date","date","toUTCString","iduser","target","value"],"sources":["C:/Users/Eze/Desktop/Bootcamp/MyTinerary/mytinerary/frontend/src/components/Comments.jsx"],"sourcesContent":["import React, {useState} from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\r\nimport commentActions from \"../redux/actions/commentsActions\"\r\nimport AddIcon from \"@mui/icons-material/Add\"\r\nimport { TextField } from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\"\r\nimport DeleteIcon from \"@mui/icons-material/Delete\"\r\nimport \"../styles/comments.css\"\r\n\r\nfunction Comments({itinerary, cityid}){\r\n    // console.log(itinerary);\r\n    const [comments, setComments] = useState([])\r\n    const [inputText, setInputText] = useState()\r\n    const [modify, setModify] = useState()\r\n    const [reload, setReload] = useState()\r\n    const dispatch = useDispatch()\r\n    // console.log(inputText);\r\n    const user = useSelector(store=>store.userReducer.user)\r\n\r\n    // let itineraryId = itinerary._id\r\n\r\n    async function toAdd(event) {\r\n        const commentData = {\r\n            itineraryId: itinerary._id,\r\n            comments: {\r\n                comment: inputText,\r\n                userid: user.id\r\n            },\r\n        }\r\n        await dispatch(commentActions.addComment(commentData))\r\n        setInputText(\"\")\r\n        setReload(!reload)\r\n    }\r\n    async function toModify(comments){\r\n        const commentData = {\r\n            commentId : comments._id,\r\n            comment: modify\r\n            }\r\n        await dispatch(commentActions.modifyComment(commentData))\r\n            setReload(!reload)\r\n    }\r\n    async function toDelete(comments){\r\n        await dispatch(commentActions.deleteComment(comments._id))\r\n        setReload(!reload)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(itinerariesActions.findTinFromCity(cityid))\r\n    },[reload])\r\n    console.log(user);\r\n    return(\r\n        <div className=\"comments-box\">\r\n            <div className=\"comments-container\">\r\n                {\r\n                    user==null?\r\n                    <h1>Go to sign in for comment about the itineraries!</h1>:\r\n                    <div></div>\r\n                }\r\n                {itinerary.comments.length>0?\r\n                    user==null?\r\n                        itinerary.comments.map(comments=>(\r\n                            <div className=\"comment\" key={comments._id}>\r\n                                    <p>{comments.comment}</p>\r\n                                    <p>{new Date(comments.date).toUTCString()}</p>\r\n                            </div>\r\n                        ))\r\n                    :\r\n                        itinerary.comments.map(comments=>\r\n                            (\r\n                            user.id==comments.iduser?\r\n                            (\r\n                            <div className=\"comment\" key={comments._id}>\r\n                                {/* <p>{user.}</p> */}\r\n                                {/* <img src={comments.iduser.photo} alt=\"godines\"/> */}\r\n                                <p>{comments.comment}</p>\r\n                                <p>{new Date(comments.date).toUTCString()}</p>\r\n                                <textarea rows='2' onChange={(event) => setModify(event.target.value)} defaultValue={comments.comment} />\r\n                                <EditIcon id={comments._id} onClick={() => toModify(comments)} />\r\n                                <DeleteIcon id={comments._id} onClick={() => toDelete(comments)} />\r\n                            </div>\r\n                            ):\r\n                            (<div className=\"comment\" key={comments._id}>\r\n                                {/* <img src={comments.iduser.photo} alt=\"godines\"/> */}\r\n                                <p>{comments.comment}</p>\r\n                                <p>{new Date(comments.date).toUTCString()}</p>\r\n                            </div>\r\n                            ))):\r\n                            <div>\r\n                                <h1>there are no commentaries, be the first</h1>\r\n                            </div>\r\n                        \r\n                }\r\n            </div>\r\n            <div className=\"input-comment\">\r\n                <TextField id=\"standard-basic\" label=\"Comment\" variant=\"standard\" onChange={(event) => setInputText(event.target.value)} value={inputText}/>\r\n                <AddIcon onClick={toAdd}  />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Comments"],"mappings":"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"},"metadata":{},"sourceType":"module"}