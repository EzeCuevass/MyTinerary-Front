{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eze\\\\Desktop\\\\Bootcamp\\\\MyTinerary\\\\mytinerary\\\\frontend\\\\src\\\\components\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\nimport commentActions from \"../redux/actions/commentsActions\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { TextField } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(_ref) {\n  _s();\n\n  let {\n    itinerary,\n    cityid\n  } = _ref;\n  // console.log(itinerary);\n  const [comments, setComments] = useState([]);\n  const [inputText, setInputText] = useState();\n  const [modify, setModify] = useState();\n  const [reload, setReload] = useState();\n  const dispatch = useDispatch(); // console.log(inputText);\n\n  const user = useSelector(store => store.userReducer.user); // let itineraryId = itinerary._id\n\n  async function toAdd(event) {\n    const commentData = {\n      itineraryId: itinerary._id,\n      comments: {\n        comment: inputText,\n        userid: user.id\n      }\n    };\n    await dispatch(commentActions.addComment(commentData));\n    setInputText(\"\");\n    setReload(!reload);\n  }\n\n  async function toModify(event) {\n    const commentData = {\n      commentId: comments._id,\n      comments: {\n        comment: modify,\n        userid: user.id\n      }\n    };\n    await dispatch(commentActions.modifyComment(commentData));\n    setReload(!reload);\n  }\n\n  async function toDelete(event) {\n    await dispatch(commentActions.deleteComment(event.target.id));\n    setReload(!reload);\n  }\n\n  useEffect(() => {\n    dispatch(itinerariesActions.findTinFromCity(cityid));\n  }, [reload]);\n  console.log(itinerary);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" god no?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: itinerary.comments.length > 0 ? itinerary.comments.map(comments => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"2\",\n          onChange: event => setModify(event.target.value),\n          defaultValue: comments.comments,\n          className: \"myInputforComment fredokaFont\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n          id: comment._id,\n          onClick: toModify,\n          sx: {\n            bgcolor: 'rgb(196, 165, 126)',\n            '&:hover': {\n              bgcolor: 'rgba(196, 165, 126, 0.7)'\n            },\n            padding: '5px',\n            margin: '5px',\n            color: 'white',\n            width: '30px',\n            height: '30px',\n            borderRadius: '15px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"there are no commentaries, be the first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"Comment\",\n      variant: \"standard\",\n      onChange: event => setInputText(event.target.value),\n      value: inputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n      onClick: toAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"m+GqqYzOTWbpGwsGJBVZmAiiHHI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","itinerariesActions","commentActions","AddIcon","TextField","EditIcon","Comments","itinerary","cityid","comments","setComments","inputText","setInputText","modify","setModify","reload","setReload","dispatch","user","store","userReducer","toAdd","event","commentData","itineraryId","_id","comment","userid","id","addComment","toModify","commentId","modifyComment","toDelete","deleteComment","target","findTinFromCity","console","log","length","map","date","value","bgcolor","padding","margin","color","width","height","borderRadius"],"sources":["C:/Users/Eze/Desktop/Bootcamp/MyTinerary/mytinerary/frontend/src/components/Comments.jsx"],"sourcesContent":["import React, {useState} from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\r\nimport commentActions from \"../redux/actions/commentsActions\"\r\nimport AddIcon from \"@mui/icons-material/Add\"\r\nimport { TextField } from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\"\r\n\r\nfunction Comments({itinerary, cityid}){\r\n    // console.log(itinerary);\r\n    const [comments, setComments] = useState([])\r\n    const [inputText, setInputText] = useState()\r\n    const [modify, setModify] = useState()\r\n    const [reload, setReload] = useState()\r\n    const dispatch = useDispatch()\r\n    // console.log(inputText);\r\n    const user = useSelector(store=>store.userReducer.user)\r\n\r\n    // let itineraryId = itinerary._id\r\n\r\n    async function toAdd(event) {\r\n        const commentData = {\r\n            itineraryId: itinerary._id,\r\n            comments: {\r\n                comment: inputText,\r\n                userid: user.id\r\n            },\r\n        }\r\n        await dispatch(commentActions.addComment(commentData))\r\n        setInputText(\"\")\r\n        setReload(!reload)\r\n    }\r\n    async function toModify(event){\r\n        const commentData = {\r\n            commentId : comments._id,\r\n            comments: {\r\n                comment: modify,\r\n                userid: user.id\r\n            }\r\n        }\r\n        await dispatch(commentActions.modifyComment(commentData))\r\n        setReload(!reload)\r\n    }\r\n    async function toDelete(event){\r\n        await dispatch(commentActions.deleteComment(event.target.id))\r\n        setReload(!reload)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(itinerariesActions.findTinFromCity(cityid))\r\n    },[reload])\r\n    console.log(itinerary);\r\n    return(\r\n        <div>\r\n            <p> god no?</p>\r\n            <div className=\"comments-container\">\r\n                {itinerary.comments.length>0?\r\n                    itinerary.comments.map(comments=>(\r\n                        <div className=\"comment\">\r\n                            <p>{comments.comment}</p>\r\n                            <p>{comments.date}</p>\r\n                            <textarea rows='2' onChange={(event) => setModify(event.target.value)} defaultValue={comments.comments} className='myInputforComment fredokaFont' />\r\n                            <EditIcon id={comment._id} onClick={toModify} sx={{bgcolor: 'rgb(196, 165, 126)', '&:hover': {bgcolor: 'rgba(196, 165, 126, 0.7)'}, padding: '5px', margin: '5px', color: 'white', width: '30px', height: '30px', borderRadius: '15px'}} />\r\n                        </div>\r\n                    )):\r\n                    <div>\r\n                        <h1>there are no commentaries, be the first</h1>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <TextField id=\"standard-basic\" label=\"Comment\" variant=\"standard\" onChange={(event) => setInputText(event.target.value)} value={inputText}/>\r\n            <AddIcon onClick={toAdd}  />\r\n        </div>\r\n    )\r\n}\r\nexport default Comments"],"mappings":"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"},"metadata":{},"sourceType":"module"}