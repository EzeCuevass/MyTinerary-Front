{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import itinerariesActions from\"../redux/actions/itinerariesActions\";import{useDispatch,useSelector}from\"react-redux\";import{useParams}from\"react-router-dom\";import\"../styles/itineraries.css\";import\"../styles/activities.css\";import CardItineararies from\"./CardItineraries\";import{jsx as _jsx}from\"react/jsx-runtime\";function Itineraries(_ref){var cityid=_ref.cityid;var dispatch=useDispatch();var itinerary=useSelector(function(store){return store.itinerariesReducer.itinerary;});var _useParams=useParams(),id=_useParams.id;// console.log(itinerary);\n// user && \n// console.log(user.id);\nuseEffect(function(){dispatch(itinerariesActions.findTinFromCity(id));},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"itineraries-container\",children:itinerary.length>0?itinerary.map(function(itinerary){return/*#__PURE__*/_jsx(CardItineararies,{itinerary:itinerary,cityid:cityid},itinerary._id);}):/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsx(\"p\",{className:\"noitineraries\",children:\"No itineraries available\"})})});}export default Itineraries;","map":{"version":3,"names":["React","useEffect","useState","itinerariesActions","useDispatch","useSelector","useParams","CardItineararies","Itineraries","cityid","dispatch","itinerary","store","itinerariesReducer","id","findTinFromCity","length","map","_id"],"sources":["C:/Users/Eze/Desktop/Bootcamp/MyTinerary/mytinerary/frontend/src/components/Itineraries.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport \"../styles/itineraries.css\"\r\n\r\nimport \"../styles/activities.css\"\r\nimport CardItineararies from \"./CardItineraries\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Itineraries({cityid}){    \r\n    const dispatch = useDispatch()\r\n\r\n    const itinerary = useSelector(store=>store.itinerariesReducer.itinerary)\r\n    let {id} = useParams()    \r\n    // console.log(itinerary);\r\n    // user && \r\n    // console.log(user.id);\r\n    useEffect(()=>{\r\n        dispatch(itinerariesActions.findTinFromCity(id))\r\n    },[])\r\n    \r\n    \r\n    return(\r\n            <div className=\"itineraries-container\">\r\n                {itinerary.length>0?\r\n                itinerary.map(itinerary=>(\r\n                <CardItineararies itinerary={itinerary} cityid={cityid} key={itinerary._id} />\r\n            )): <div className=\"error-message\">\r\n                    <p className=\"noitineraries\">No itineraries available</p>\r\n                </div>\r\n            }\r\n            </div>\r\n    )\r\n}\r\nexport default Itineraries"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,mBAAP,KAA+B,qCAA/B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAO,2BAAP,CAEA,MAAO,0BAAP,CACA,MAAOC,iBAAP,KAA6B,mBAA7B,C,2CAMA,QAASC,YAAT,MAA8B,IAARC,OAAQ,MAARA,MAAQ,CAC1B,GAAMC,SAAQ,CAAGN,WAAW,EAA5B,CAEA,GAAMO,UAAS,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAEA,MAAK,CAACC,kBAAN,CAAyBF,SAA3B,EAAN,CAA7B,CACA,eAAWL,SAAS,EAApB,CAAKQ,EAAL,YAAKA,EAAL,CACA;AACA;AACA;AACAb,SAAS,CAAC,UAAI,CACVS,QAAQ,CAACP,kBAAkB,CAACY,eAAnB,CAAmCD,EAAnC,CAAD,CAAR,CACH,CAFQ,CAEP,EAFO,CAAT,CAKA,mBACQ,YAAK,SAAS,CAAC,uBAAf,UACKH,SAAS,CAACK,MAAV,CAAiB,CAAjB,CACDL,SAAS,CAACM,GAAV,CAAc,SAAAN,SAAS,qBACvB,KAAC,gBAAD,EAAkB,SAAS,CAAEA,SAA7B,CAAwC,MAAM,CAAEF,MAAhD,EAA6DE,SAAS,CAACO,GAAvE,CADuB,EAAvB,CADC,cAGD,YAAK,SAAS,CAAC,eAAf,uBACI,UAAG,SAAS,CAAC,eAAb,sCADJ,EAJJ,EADR,CAWH,CACD,cAAeV,YAAf"},"metadata":{},"sourceType":"module"}