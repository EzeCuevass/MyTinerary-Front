{"ast":null,"code":"const initialState = {\n  cities: [],\n  auxiliar: []\n};\n\nconst citiesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GETCITIES\":\n      return { ...state,\n        cities: action.payload,\n        auxiliar: action.payload\n      };\n\n    case \"GETONECITY\":\n      return { ...state,\n        cities: action.payload,\n        auxiliar: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default citiesReducer;","map":{"version":3,"names":["initialState","cities","auxiliar","citiesReducer","state","action","type","payload"],"sources":["C:/Users/Eze/Desktop/Bootcamp/MyTinerary/mytinerary/frontend/src/redux/reducers/citiesReducer.js"],"sourcesContent":["const initialState = {\r\n    cities : [],\r\n    auxiliar : [],\r\n}\r\n\r\nconst citiesReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GETCITIES\": return {\r\n            ...state,\r\n            cities: action.payload,\r\n            auxiliar: action.payload\r\n        }\r\n        case \"GETONECITY\":\r\n            return{\r\n                ...state,\r\n                cities: action.payload,\r\n                auxiliar: action.payload\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default citiesReducer"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,MAAM,EAAG,EADQ;EAEjBC,QAAQ,EAAG;AAFM,CAArB;;AAKA,MAAMC,aAAa,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACnD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,WAAL;MAAkB,OAAO,EACrB,GAAGF,KADkB;QAErBH,MAAM,EAAEI,MAAM,CAACE,OAFM;QAGrBL,QAAQ,EAAEG,MAAM,CAACE;MAHI,CAAP;;IAKlB,KAAK,YAAL;MACI,OAAM,EACF,GAAGH,KADD;QAEFH,MAAM,EAAEI,MAAM,CAACE,OAFb;QAGFL,QAAQ,EAAEG,MAAM,CAACE;MAHf,CAAN;;IAKJ;MACI,OAAOH,KAAP;EAbR;AAeH,CAhBD;;AAiBA,eAAeD,aAAf"},"metadata":{},"sourceType":"module"}